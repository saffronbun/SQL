/* For this project I worked with a digital media store database */
/* And analyzed it's data as a final SQL project */

/* 1. Find a unique/distinct list of billing countries from the invoice table */
/* I elected to use a case statement to group the billing countries by continent */
SELECT i.BillingCountry,
CASE
WHEN i.BillingCountry = 'Argentina' THEN 'South America'
WHEN i.BillingCountry = 'Australia' THEN 'Oceania'
WHEN i.BillingCountry = 'Austria' THEN 'Europe'
WHEN i.BillingCountry = 'Belgium' THEN 'Europe'
WHEN i.BillingCountry = 'Brazil' THEN 'South America'
WHEN i.BillingCountry = 'Canada' THEN 'North America'
WHEN i.BillingCountry = 'Chile' THEN 'South America'
WHEN i.BillingCountry = 'Czech Republic' THEN 'Europe'
WHEN i.BillingCountry = 'Denmark' THEN 'Europe'
WHEN i.BillingCountry = 'Finland' THEN 'Europe'
WHEN i.BillingCountry = 'France' THEN 'Europe'
WHEN i.BillingCountry = 'Germany' THEN 'Europe'
WHEN i.BillingCountry = 'Hungary' THEN 'Europe'
WHEN i.BillingCountry = 'India' THEN 'Asia'
WHEN i.BillingCountry = 'Ireland' THEN 'Europe'
WHEN i.BillingCountry = 'Italy' THEN 'Europe'
WHEN i.BillingCountry = 'Netherlands' THEN 'Europe'
WHEN i.BillingCountry = 'Norway' THEN 'Europe'
WHEN i.BillingCountry = 'Poland' THEN 'Europe'
WHEN i.BillingCountry = 'Portugal' THEN 'Europe'
WHEN i.BillingCountry = 'Spain' THEN 'Europe'
WHEN i.BillingCountry = 'Sweden' THEN 'Europe'
WHEN i.BillingCountry = 'USA' THEN 'North America'
WHEN i.BillingCountry = 'United Kingdom' THEN 'Europe'
ELSE null
END AS Continent
FROM chinook.invoices i
GROUP BY i.BillingCountry;

/* 2. Provide a query that shows the invoices associated with each sales agent */
/* The resulting table should include the Sales Agent's full name */
SELECT i.InvoiceId, e.FirstName, e.LastName FROM chinook.employees e
JOIN chinook.customers c 
ON e.EmployeeId = c.SupportRepID
JOIN chinook.invoices i
ON c.CustomerId = i.CustomerId

/* 3. Show the invoice total, customer name, country and sales agent name for all invoices and customers */
SELECT c.FirstName AS CustomerFirstName, c.LastName AS CustomerLastName, c.Country, e.FirstName as EmployeeFirstName, i.Total 
FROM chinook.employees e
JOIN chinook.customers c 
ON e.EmployeeId = c.SupportRepID
JOIN chinook.invoices i
ON c.CustomerId = i.CustomerId;

/* 4. How many invoices were there in 2009? */
SELECT COUNT(*) from chinook.invoices i
WHERE i.InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

/* 5. What are the total sales for 2009? */
SELECT SUM(Total) FROM chinook.invoices i
WHERE i.InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

/* 6. Write a query that includes the purchased track name with each invoice line ID */
SELECT t.Name, i.InvoiceLineId from chinook.invoice_items i
JOIN chinook.tracks t
ON i.TrackId = t.TrackId;

/* 7. Write a query that includes the purchased track name AND artist name with each invoice line ID */
SELECT t.Name AS 'Song Title', a.Name AS 'Artist Name', i.InvoiceLineId from chinook.invoice_items i
JOIN chinook.tracks t
ON i.TrackId = t.TrackId
JOIN chinook.albums al
ON t.AlbumId = al.AlbumId
JOIN chinook.artists a
ON al.ArtistId = a.ArtistId;

/* 8. Provide a query that shows all the tracks, and include the album name, media type, and genre */
SELECT t.Name AS 'Song Title', a.Title AS 'Album Title', g.Name AS Genre, m.Name AS 'Media Type' FROM chinook.tracks t
JOIN chinook.albums a
ON t.AlbumId = a.AlbumId
JOIN chinook.genres g
ON t.GenreId = g.GenreId
JOIN chinook.media_types m
ON t.MediaTypeId = m.MediaTypeId;

/* 9. Show the total sales made by each sales agent */
SELECT e.EmployeeId, e.FirstName, e.LastName, ROUND(SUM(i.Total)) AS 'Total Sales' FROM chinook.employees e
JOIN chinook.customers c
ON e.EmployeeId = c.SupportRepId
JOIN chinook.invoices i
ON c.CustomerId = i.InvoiceId
GROUP BY e.EmployeeId;

/* 10. Which sales agent made the most dollars in sales in 2009? *?
SELECT e.EmployeeId, e.FirstName, e.LastName, ROUND(SUM(i.Total)) AS 'Total Sales' FROM chinook.employees e
JOIN chinook.customers c
ON e.EmployeeId = c.SupportRepId
JOIN chinook.invoices i
ON c.CustomerId = i.InvoiceId
WHERE i.InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
GROUP BY e.EmployeeId
ORDER BY ROUND(SUM(i.Total)) DESC LIMIT 1;

/* 11. What songs (and their artists) feature on the grunge and heavy metal classic playlists? */
SELECT p.Name AS 'Playlist Name', t.Name AS 'Song Title', a.Name AS 'Artist' FROM chinook.playlists p
JOIN chinook.playlist_track pt
ON p.PlaylistId = pt.PlaylistId
JOIN chinook.tracks t
ON pt.TrackId = t.TrackId
JOIN chinook.albums al
ON t.AlbumId = al.AlbumId
JOIN chinook.artists a
ON al.ArtistId = a.ArtistId
WHERE p.Name = 'Grunge' OR p.Name = 'Heavy Metal Classic';

/* 12. How many of each media type is in the database? */
SELECT m.Name AS 'Media Type', COUNT(t.TrackId) AS 'Total Count' FROM chinook.media_types m
JOIN chinook.tracks t
ON m.MediaTypeId = t.MediaTypeId
GROUP BY m.Name;

/* 13. Which employees have customers in the same country as them? */
SELECT e.FirstName AS 'Employee Name', e.Country AS 'Employee Country', 
c.FirstName AS 'Customer Name', c.Country AS 'Customer Country' 
FROM chinook.employees e
JOIN chinook.customers c
ON e.EmployeeId = c.SupportRepId
WHERE e.Country = c.Country;

/* 14. Which tracks on the database are audiobooks and not music? */
SELECT p.Name AS 'Playlist Name', t.Name AS 'Track Title', 
a.Name AS 'Artist' 
FROM chinook.playlists p
JOIN chinook.playlist_track pt
ON p.PlaylistId = pt.PlaylistId
JOIN chinook.tracks t
ON pt.TrackId = t.TrackId
JOIN chinook.albums al
ON t.AlbumId = al.AlbumId
JOIN chinook.artists a 
ON al.ArtistId = a.ArtistId
WHERE p.Name = 'Audiobooks';
