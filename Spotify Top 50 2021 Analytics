/* For this project, I downloaded Spotify data from Kaggle */
/* Created a table to insert Spotify data into */
/* And performed analytics on the data using SQLiteStudio */

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

/* I then inserted the Spotify csv into SQLite */

/* Finally I analyised the data using the following SQL */

/* Who are the top 10 most popular artists? */
SELECT artist_name, popularity FROM BIT_DB.Spotifydata
ORDER BY popularity DESC LIMIT 10;

/* Do any songs fit the tempo (BPM) that soothes anxeity (60-80 BPM)? */
SELECT track_name, tempo FROM BIT_DB.Spotifydata
WHERE tempo BETWEEN 60 AND 80;

/* Do any artists have more than one song on the list? */
SELECT artist_name, COUNT(track_name) FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING COUNT(track_name) > 1;

/* Which songs feature other artists? */
SELECT track_name FROM BIT_DB.Spotifydata
WHERE track_name like '%feat%';

/* Do songs with higher valence (positivity) also have more 'danceability'? */
SELECT artist_name, track_name, valence, danceability FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY valence DESC LIMIT 5;

/* What is the average song duration for each artist? */
SELECT artist_name, ROUND(avg(duration_ms)) FROM BIT_DB.Spotifydata
GROUP BY artist_name;

/* Which arist has the loudest (dB) music on average? */
SELECT artist_name, avg(loudness) FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY loudness DESC LIMIT 1;
